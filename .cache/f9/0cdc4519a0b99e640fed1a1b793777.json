{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/Users/luuk/projects/ddd-decay/index.html","resolved":"/Users/luuk/.config/yarn/global/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>fxxxlocsdsking</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n\n\n\t\t<style>body {\n\t\t\t\tbackground-color: #ffffff;\n\t\t\t\tmargin: 0px;\n\t\t\t\toverflow: hidden;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}</style>\n\t</head>\n\t<body>\n\n\t\t<div id=\"container\"></div>\n\t\t<canvas id=\"layer1\"></canvas>\n\t\t<canvas id=\"layer2\"></canvas>\n\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/104/three.min.js\"></script>\n\t\t<script id=\"vertexShader\" type=\"x-shader/x-vertex\">\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = vec4( position, 1.0 );\n\t\t\t}\n\t\t</script>\n\n\t\t<script id=\"fragmentShader\" type=\"x-shader/x-fragment\">\n\t\t\tuniform vec2 u_resolution;\n\t\t\tuniform sampler2D u_texture_1;\n\t\t\tuniform sampler2D u_texture_2;\n\t\t\tuniform sampler2D u_texture_3;\n\t\t\tuniform sampler2D u_texture_4;\n\t\t\tuniform float u_loop_1;\n\t\t\tuniform float u_loop_2;\n\t\t\tuniform bool u_loop_1_running;\n\t\t\tuniform bool u_loop_2_running;\n\t\t\tuniform vec2 st;\n\n\t\t\tvoid main() {\n\t\t\t\tfloat amplitude = 100.;\n\t\t\t\tfloat frequency = 5.0;\n\n\t\t\t\tvec2 st = gl_FragCoord.st/u_resolution.xy;\n\t\t\t\tvec3 pattern_1 = vec3(0.6);\n\t\t\t\tvec3 pattern_2 = vec3(0.6);\n\t\t\t\tvec3 rothko_1 = vec3(0.6);\n\t\t\t\tvec3 rothko_2\t = vec3(0.6);\n\n\t\t\t\tvec4 texture_1 = texture2D(u_texture_1, st);\n\t\t\t\tvec4 texture_2 = texture2D(u_texture_2, st);\n\t\t\t\tvec4 texture_3 = texture2D(u_texture_3, st);\n\t\t\t\tvec4 texture_4 = texture2D(u_texture_4, st);\n\n\t\t\t\tpattern_1 += texture_1.xyz;\n\t\t\t\tpattern_2 += texture_2.xyz;\n\t\t\t\trothko_1 += texture_3.xyz;\n\t\t\t\trothko_2 += texture_4.xyz;\n\n\t\t\t\tvec3 print = vec3(0.6);\n\t\t\t\tvec3 layer_1 = abs(pattern_1 - rothko_1);\n\t\t\t\tvec3 layer_2 = abs(pattern_2 - rothko_2);\n\t\t\t\tvec3 layer_3 = abs(pattern_1 - rothko_1);\n\n\t\t\t\tif(u_loop_1_running) {\n\t\t\t\t\tif( all(greaterThan(layer_1, vec3(u_loop_1)))) {\n\t\t\t\t\t\tlayer_1 = vec3(0.08);\n\t\t\t\t\t} else if( all(lessThan(layer_2, vec3(u_loop_1)))) {\n\t\t\t\t\t\tlayer_2 = vec3(0.08);\n\t\t\t\t\t\tlayer_1 = layer_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlayer_1 = vec3(0.6);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(u_loop_2_running) {\n\t\t\t\t\tif( all(greaterThan(layer_1, vec3(u_loop_2)))) {\n\t\t\t\t\t\tlayer_1 = vec3(0.08);\n\t\t\t\t\t} else if( all(lessThan(layer_2, vec3(u_loop_2)))) {\n\t\t\t\t\t\tlayer_2 = vec3(0.08);\n\t\t\t\t\t\tlayer_1 = layer_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlayer_1 = vec3(0.6);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvec4 texture = vec4(layer_1, 1.0);\n\n\t\t\t\tgl_FragColor = texture;\n\t\t\t}\n\t\t</script>\n\n    <script>var container;\nvar canvas;\nvar camera, scene, renderer;\nvar uniforms;\nvar loop_1 = 0.0;\nvar loop_2 = 0.0;\nvar loop_1_running = true;\nvar loop_2_running = false;\nvar layer1 = new Image();\nvar layer2 = new Image();\ninit();\nanimate();\n\nfunction init() {\n  renderer = new THREE.WebGLRenderer();\n  renderer.setClearColor(1.0, 1.0, 1.0, 0.0);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  container = document.getElementById('container');\n  container.appendChild(renderer.domElement);\n  camera = new THREE.Camera();\n  camera.position.z = 1;\n  scene = new THREE.Scene();\n  var geometry = new THREE.PlaneBufferGeometry(2, 2);\n  var ctx_1 = document.querySelector('#layer1').getContext('2d');\n  var ctx_2 = document.querySelector('#layer2').getContext('2d');\n  var canvas_1 = ctx_1.canvas;\n  var canvas_2 = ctx_2.canvas;\n  canvas_1.width = window.innerWidth;\n  canvas_1.height = window.innerHeight;\n  canvas_2.width = window.innerWidth;\n  canvas_2.height = window.innerHeight;\n\n  function isPortrait() {\n    var ratio = window.innerWidth / window.innerHeight;\n    return ratio >= 1 ? false : true;\n  }\n\n  function setSource() {\n    ctx_1.clearRect(0, 0, canvas_1.width, canvas_1.height);\n    ctx_2.clearRect(0, 0, canvas_2.width, canvas_2.height);\n    layer1.src = isPortrait() ? \"img/intro_p.svg\" : \"img/intro.svg\";\n    layer2.src = \"img/quote.svg\";\n  }\n\n  setSource();\n  console.log(layer1, layer2);\n\n  function updateCanvas() {\n    setSource();\n    canvasTexture_1.needsUpdate = true;\n    canvasTexture_2.needsUpdate = true;\n  }\n\n  function scaleToFit(img, context) {\n    var canvas = context.canvas;\n    var scale = Math.min(canvas.width / img.width, canvas.height / img.height);\n    var x = canvas.width / 2 - img.width / 2 * scale;\n    var y = canvas.height / 2 - img.height / 2 * scale;\n    return context.drawImage(img, x, y, img.width * scale, img.height * scale);\n  }\n\n  function drawImage(img, context, texture) {\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    scaleToFit(img, context);\n    texture.needsUpdate = true;\n  }\n\n  layer1.onload = function () {\n    return drawImage(layer1, ctx_1, canvasTexture_1);\n  };\n\n  layer2.onload = function () {\n    return drawImage(layer2, ctx_2, canvasTexture_2);\n  };\n\n  window.addEventListener('resize', updateCanvas, false);\n  var canvasTexture_1 = new THREE.CanvasTexture(ctx_1.canvas);\n  var canvasTexture_2 = new THREE.CanvasTexture(ctx_2.canvas);\n  var loader = new THREE.TextureLoader();\n  var texture1 = canvasTexture_1;\n  var texture2 = canvasTexture_2;\n  var texture3 = loader.load('./img/rothko.jpg');\n  var texture4 = loader.load('./img/rothko3.jpg');\n  uniforms = {\n    u_loop_1: {\n      type: \"f\",\n      value: 1.0\n    },\n    u_loop_2: {\n      type: \"f\",\n      value: 1.0\n    },\n    u_loop_1_running: {\n      type: \"b\",\n      value: false\n    },\n    u_loop_2_running: {\n      type: \"b\",\n      value: false\n    },\n    u_resolution: {\n      type: \"v2\",\n      value: new THREE.Vector2()\n    },\n    u_texture_1: {\n      type: \"t\",\n      value: texture1\n    },\n    u_texture_2: {\n      type: \"t\",\n      value: texture2\n    },\n    u_texture_3: {\n      type: \"t\",\n      value: texture3\n    },\n    u_texture_4: {\n      type: \"t\",\n      value: texture4\n    }\n  };\n  var material = new THREE.ShaderMaterial({\n    uniforms: uniforms,\n    vertexShader: document.getElementById('vertexShader').textContent,\n    fragmentShader: document.getElementById('fragmentShader').textContent,\n    transparent: true,\n    opacity: 0\n  });\n  var mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n  onWindowResize();\n  window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize(event) {\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  camera.aspect = renderer.domElement.width / renderer.domElement.width;\n  uniforms.u_resolution.value.x = renderer.domElement.width;\n  uniforms.u_resolution.value.y = renderer.domElement.height;\n  console.log('resize');\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n}\n\nfunction render() {\n  loop_1_running && (loop_1 += 0.01);\n  loop_2_running && (loop_2 += 0.01);\n  var shortVelocity = .08;\n  loop_1_curve = Math.sin(loop_1 * shortVelocity);\n  loop_2_curve = Math.sin(loop_2 * shortVelocity);\n\n  if (loop_1_running) {\n    if (loop_1_curve > 0.99) {\n      loop_1 = 0;\n      loop_1_running = false;\n      loop_2_running = true;\n    }\n  }\n\n  if (loop_2_running) {\n    if (loop_2_curve > 0.99) {\n      loop_2 = 0;\n      loop_2_running = false;\n      loop_1_running = true;\n    }\n  }\n\n  shortLoop_1 = Math.abs(loop_1_curve, 0);\n  shortLoop_2 = Math.abs(loop_2_curve, 0);\n  uniforms.u_loop_1.value = shortLoop_1; // adjusts loop speed\n\n  uniforms.u_loop_2.value = shortLoop_2; // adjusts loop speed\n\n  uniforms.u_loop_1_running.value = loop_1_running;\n  uniforms.u_loop_2_running.value = loop_2_running;\n  renderer.render(scene, camera);\n}</script>\n\t</body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"078e6572740766fc4ff148823cf5e89c","cacheData":{"env":{}}}